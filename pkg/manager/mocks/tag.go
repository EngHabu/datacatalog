// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import datacatalog "github.com/lyft/flyteidl/gen/pb-go/flyteidl/datacatalog"

import mock "github.com/stretchr/testify/mock"

// TagManager is an autogenerated mock type for the TagManager type
type TagManager struct {
	mock.Mock
}

// AddTag provides a mock function with given fields: ctx, request
func (_m *TagManager) AddTag(ctx context.Context, request datacatalog.AddTagRequest) (*datacatalog.AddTagResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 *datacatalog.AddTagResponse
	if rf, ok := ret.Get(0).(func(context.Context, datacatalog.AddTagRequest) *datacatalog.AddTagResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*datacatalog.AddTagResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, datacatalog.AddTagRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
